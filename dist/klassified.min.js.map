{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/globalPropertyEventEmitter.js","src/klassified.js","src/object.js","src/propertiesEventEmitter.js","src/property.js","src/testCase.js"],"names":["f","exports","module","define","amd","window","global","self","this","klassified","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_object2","default","singletonSubclass","that","my","initialize","spec","super","accessListeners","changeListeners","onAccess","listener","push","onChange","emitAccess","instance","propName","forEach","emitChange","value","object","testCase","propertyEventEmitter","_testCase2","_globalPropertyEventEmitter2","getClass","preInitialize","postInitialize","subclassResponsibility","get","getter","capitalized","set","setter","extensions","extension","installSuper","obj","proto","klass","receiverName","methodsWithSuperCall","name","superInstalled","fn","superFn","tmp","returnValue","apply","arguments","undefined","Object","defineProperty","enumerable","writable","keys","filter","superCallRegex","test","throwAbstractClassError","throwSingletonClassError","string","toUpperCase","slice","subclasses","allSubclasses","subclass","allConcreteSubclasses","isAbstract","builder","notFinal","isSingleton","superInstance","assign","superMy","superclass","classBuilder","abstractSubclass","class","superClassBuilder","extend","target","TypeError","output","index","source","nextKey","hasOwnProperty","indexOf","emitPropertyAccess","ensurePropertiesEventEmitter","emitPropertyChange","onPropertyAccess","onPropertyChange","property","initialValue","configurable","newValue","propertiesEventEmitter","_propertiesEventEmitter2","suite","callback","force","fdescribe","describe","tests","registeredTests","beforeEach","afterEach","beforeAll","afterAll","it","expect","spyOn","result","testRegex","buildTestName","replace","toLowerCase","isTestCase","superSubclass","options"],"mappings":"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","file":"klassified.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import object from \"./object\";\n\n/**\n * Central property events emitter.\n *\n * All properties will trigger events when accessed or changed.\n */\nexport default object.singletonSubclass(function(that, my) {\n\tmy.initialize = function(spec) {\n\t\tmy.super(spec);\n\t\tmy.accessListeners = [];\n\t\tmy.changeListeners = [];\n\t};\n\n\tthat.onAccess = function(listener) {\n\t\tmy.accessListeners.push(listener);\n\t};\n\n\tthat.onChange = function(listener) {\n\t\tmy.changeListeners.push(listener);\n\t};\n\n\tthat.emitAccess = function(instance, propName) {\n\t\tmy.accessListeners.forEach(function(listener) {\n\t\t\tlistener(instance, propName);\n\t\t});\n\t};\n\n\tthat.emitChange = function(instance, propName, value) {\n\t\tmy.changeListeners.forEach(function(listener) {\n\t\t\tlistener(instance, propName, value);\n\t\t});\n\t};\n});\n","import object from \"./object\";\nimport testCase from \"./testCase\";\nimport propertyEventEmitter from \"./globalPropertyEventEmitter\";\nimport \"./property\";\n\nexport {\n\tobject,\n\ttestCase,\n\tpropertyEventEmitter\n};\n\nexport default {\n\tobject,\n\ttestCase,\n\tpropertyEventEmitter\n};\n","/**\n * `object` is the base class of the object model.\n * It provides facilities to create subclasses and common methods.\n *\n * @example Basic usage\n *\n * Creating subclasses & using inheritance:\n *\n *    let animal = object.subclass(function(that, my) {\n *\n *        my.initialize = function(spec) {\n *            my.super();\n *            my.name = spec.name;\n *        };\n *\n *        that.getName = function() {\n *            return my.name;\n *        };\n *\n *        that.say = function(something) {\n *            my.subclassResponsibility();\n *        };\n *    });\n *\n *\n *    let dog = animal.subclass(function(that, my) {\n *\n *        that.getName = function() {\n *            return \"dog \" + that.super();\n *        };\n *\n *        that.say = function(something) {\n *            return \"Woof Woof, \" + something;\n *        };\n *    });\n *\n * Creating instances:\n *\n *    let milou = dog({name: milou});\n *    milou.say(\"hello Tintin\"); ;; => \"Woof Woof, hello Tintin\"\n *    milou.getName(); // => \"dog milou\"\n *\n * @param{{}} spec\n * @param{{}} my\n * @return {object}\n */\nfunction object(spec, my) {\n\tspec = spec || {};\n\tmy = my || {};\n\n\tlet that = {};\n\n\tthat.getClass = function() {\n\t\treturn object;\n\t};\n\n\t/**\n\t * preInitialize is called by the framework at the beginning\n\t * of object instantiation.\n\t */\n\tmy.preInitialize = function() {};\n\n\t/**\n\t * initialize is called by the framework upon object instantiation.\n\t */\n\tmy.initialize = function() {};\n\n\t/**\n\t * postInitialize is called by the framework at the end of\n\t * object instantiation.\n\t */\n\tmy.postInitialize = function() {};\n\n\t/**\n\t * Throws an error because the method should have been overridden.\n\t */\n\tmy.subclassResponsibility = subclassResponsibility;\n\n\t/**\n\t * Getter/Setter generation\n\t */\n\tmy.get = function(propName, getter) {\n\t\tif (!getter) {\n\t\t\tgetter = function() {\n\t\t\t\treturn my[propName];\n\t\t\t};\n\t\t}\n\t\tthat[\"get\" + capitalized(propName)] = getter;\n\t};\n\n\tmy.set = function(propName, setter) {\n\t\tif (!setter) {\n\t\t\tsetter = function(value) {\n\t\t\t\tmy[propName] = value;\n\t\t\t\treturn value;\n\t\t\t};\n\t\t}\n\t\tthat[\"set\" + capitalized(propName)] = setter;\n\t};\n\n\t// install extensions by hand for object, since we do not have the\n\t// extension installation of the subclasses\n\tthat.getClass().extensions.forEach(function(extension) {\n\t\textension(that, my);\n\t});\n\n\treturn that;\n}\n\n/**\n * Return an array of direct subclasses.\n */\nobject.subclasses = [];\n\n/**\n * Return an array of all subclasses.\n */\nobject.allSubclasses = function() {\n\tlet allSubclasses = this.subclasses.slice();\n\tthis.subclasses.forEach(function(klass) {\n\t\tklass.allSubclasses().forEach(function(subclass) {\n\t\t\tallSubclasses.push(subclass);\n\t\t});\n\t});\n\treturn allSubclasses;\n};\n\n/**\n * Return all concrete subclasses.\n */\nobject.allConcreteSubclasses = function() {\n\tlet allConcreteSubclasses = this.subclasses.filter(function(klass) {\n\t\treturn !klass.isAbstract;\n\t});\n\n\tthis.subclasses.forEach(function(klass) {\n\t\tklass.allConcreteSubclasses().forEach(function(subclass) {\n\t\t\tallConcreteSubclasses.push(subclass);\n\t\t});\n\t});\n\n\treturn allConcreteSubclasses;\n};\n\nobject.subclassResponsibility = subclassResponsibility;\n\n/**\n * Return an array of all extensions of the class, see `object.extend`.\n */\nobject.extensions = [];\n\nlet superCallRegex = /\\bsuper\\b/;\n\n/**\n * Return a new subclass, and register it to the array of `subclasses`.\n *\n * @param{function} builder Function used to build new instances of the\n * subclass.\n */\nobject.subclass = function(builder) {\n\tlet that = this;\n\n\tfunction klass(spec, my, notFinal) {\n\t\tspec = spec || {};\n\t\tmy = my || {};\n\n\t\tif (klass.isAbstract && !notFinal) {\n\t\t\tthrowAbstractClassError(that);\n\t\t}\n\n\t\tif (klass.isSingleton && !notFinal) {\n\t\t\tthrowSingletonClassError(that);\n\t\t}\n\n\t\tlet instance = that(spec, my, true);\n\n\t\tinstance.getClass = function() {\n\t\t\treturn klass;\n\t\t};\n\n\t\tlet superInstance = Object.assign({}, instance);\n\t\tlet superMy = Object.assign({}, my);\n\n\t\tklass.extensions.forEach(function(extension) {\n\t\t\textension(instance, my);\n\t\t});\n\n\t\tbuilder(instance, my);\n\n\t\tif (superCallRegex.test(builder)) {\n\t\t\tinstallSuper(my, superMy, klass, \"my\");\n\t\t\tinstallSuper(instance, superInstance, klass, \"that\");\n\t\t}\n\n\t\tif (!notFinal) {\n\t\t\tmy.preInitialize(spec);\n\t\t\tmy.initialize(spec);\n\t\t\tmy.postInitialize(spec);\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\tklass.superclass = that;\n\tklass.subclasses = [];\n\tthat.subclasses.push(klass);\n\n\t// static inheritance\n\tklass.classBuilder = that.classBuilder;\n\tklass.classBuilder(klass);\n\n\treturn klass;\n};\n\nobject.singletonSubclass = function(builder) {\n\tlet klass = this.subclass(builder);\n\tlet instance = klass();\n\tklass.isSingleton = true;\n\tklass.instance = function() {\n\t\treturn instance;\n\t};\n\n\treturn klass;\n};\n\nobject.abstractSubclass = function(builder) {\n\tlet klass = this.subclass(builder);\n\tklass.isAbstract = true;\n\treturn klass;\n};\n\nobject.class = function(builder) {\n\tlet that = this;\n\n\tif (that === object) {\n\t\tthrow new Error(\"object class should not be extended.\");\n\t}\n\n\tlet superClassBuilder = that.classBuilder;\n\tthat.classBuilder = function(klass) {\n\t\tsuperClassBuilder(klass);\n\t\tbuilder(klass);\n\t};\n\n\tthat.classBuilder(that);\n};\n\nobject.classBuilder = function(that) {\n\t// TODO: use Object.assign?\n\tthat.class = object.class;\n\tthat.subclass = object.subclass;\n\tthat.singletonSubclass = object.singletonSubclass;\n\tthat.abstractSubclass = object.abstractSubclass;\n\tthat.allSubclasses = object.allSubclasses;\n\tthat.allConcreteSubclasses = object.allConcreteSubclasses;\n\tthat.subclassResponsibility = subclassResponsibility;\n\tthat.extend = object.extend;\n\tthat.extensions = [];\n};\n\n/**\n * Mutate public functions of `obj` that make use of `super()` by binding\n * `super` from within each public function of `obj` to the function in\n * `proto`.\n */\nfunction installSuper(obj, proto, klass, receiverName) {\n\tmethodsWithSuperCall(obj, proto, klass, receiverName).forEach(function(name) {\n\t\tif (!obj[name].superInstalled) {\n\t\t\tobj[name] = (function(obj, fn, superFn) {\n\t\t\t\treturn function() {\n\n\t\t\t\t\tlet tmp = obj.super;\n\t\t\t\t\tobj.super = superFn;\n\t\t\t\t\tlet returnValue = fn.apply(obj, arguments);\n\t\t\t\t\tobj.super = tmp;\n\n\t\t\t\t\t// We reached the top of the stack regarding super\n\t\t\t\t\t// calls, so cleanup the namespace.\n\t\t\t\t\tif (obj.super === undefined) {\n\t\t\t\t\t\tdelete obj.super;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn returnValue;\n\t\t\t\t};\n\t\t\t})(obj, obj[name], proto[name]);\n\t\t\tobj[name].superInstalled = true;\n\t\t}\n\t});\n}\n\n/**\n * Return the list of methods in `obj` that perform a supercall to `proto`.\n * The list is cached in `klass`.\n *\n * `receiverName` is either \"that\" or \"my\".\n */\nfunction methodsWithSuperCall(obj, proto, klass, receiverName) {\n\tif (!klass.methodsWithSuperCall) {\n\t\tObject.defineProperty(klass, \"methodsWithSuperCall\", {\n\t\t\tenumerable: false,\n\t\t\twritable: true,\n\t\t\tvalue: {}\n\t\t});\n\t}\n\n\tif (klass.methodsWithSuperCall[receiverName]) {\n\t\treturn klass.methodsWithSuperCall[receiverName];\n\t}\n\n\tklass.methodsWithSuperCall[receiverName] = Object.keys(obj).filter(function(name) {\n\t\treturn typeof(proto[name]) === \"function\" &&\n\t\t\ttypeof(obj[name]) === \"function\" &&\n\t\t\tsuperCallRegex.test(obj[name]);\n\t});\n\n\treturn klass.methodsWithSuperCall[receiverName];\n}\n\n/**\n * Extend the class with new methods/properties.\n * @param{function} builder takes the same arguments as\n * `object.subclass`: `that`, `spec` and `my`.\n */\nobject.extend = function(builder) {\n\tthis.extensions.push(builder);\n};\n\nfunction throwAbstractClassError(klass) {\n\tthrow new Error(\"Cannot instantiate an abstract class\");\n}\n\nfunction throwSingletonClassError(klass) {\n\tthrow new Error(\"Cannot create new instances of a singleton class, use `instance` instead.\");\n}\n\n/**\n * Polyfill for Object.assign\n */\nif (typeof Object.assign !== \"function\") {\n\t(function() {\n\t\tObject.assign = function(target) {\n\t\t\tif (target === undefined || target === null) {\n\t\t\t\tthrow new TypeError(\"Cannot convert undefined or null to object\");\n\t\t\t}\n\n\t\t\tlet output = Object(target);\n\t\t\tfor (let index = 1; index < arguments.length; index++) {\n\t\t\t\tlet source = arguments[index];\n\t\t\t\tif (source !== undefined && source !== null) {\n\t\t\t\t\tfor (let nextKey in source) {\n\t\t\t\t\t\tif (source.hasOwnProperty(nextKey)) {\n\t\t\t\t\t\t\toutput[nextKey] = source[nextKey];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t};\n\t})();\n}\n\n/**\n * Helpers\n */\n\nfunction capitalized(string) {\n\treturn string[0].toUpperCase() + string.slice(1);\n}\n\n/**\n * Throw an error when a method should have been overridden in a concrete\n * subclass.\n */\nfunction subclassResponsibility() {\n\tthrow new Error(\"Subclass responsibility\");\n}\n\nexport default object;\n","import object from \"./object\";\n\nexport default object.subclass(function(that, my) {\n\tmy.initialize = function(spec) {\n\t\tmy.super(spec);\n\t\tmy.instance = spec.instance;\n\n\t\tmy.accessListeners = {};\n\t\tmy.changeListeners = {};\n\t};\n\n\tthat.onAccess = function(propName, listener) {\n\t\tif (!my.accessListeners[propName]) {\n\t\t\tmy.accessListeners[propName] = [];\n\t\t}\n\t\tif (my.accessListeners[propName].indexOf(listener) === -1) {\n\t\t\tmy.accessListeners[propName].push(listener);\n\t\t}\n\t};\n\n\tthat.onChange = function(propName, listener) {\n\t\tif (!my.changeListeners[propName]) {\n\t\t\tmy.changeListeners[propName] = [];\n\t\t}\n\t\tif (my.changeListeners[propName].indexOf(listener) === -1) {\n\t\t\tmy.changeListeners[propName].push(listener);\n\t\t}\n\t};\n\n\tthat.emitAccess = function(propName) {\n\t\tif (!my.accessListeners[propName]) {\n\t\t\treturn;\n\t\t}\n\n\t\tmy.accessListeners[propName].forEach(function(listener) {\n\t\t\tlistener(my.instance, propName);\n\t\t});\n\t};\n\n\tthat.emitChange = function(propName, value) {\n\t\tif (!my.changeListeners[propName]) {\n\t\t\treturn;\n\t\t}\n\n\t\tmy.changeListeners[propName].forEach(function(listener) {\n\t\t\tlistener(my.instance, propName, value);\n\t\t});\n\t};\n});\n","import object from \"./object\";\nimport propertiesEventEmitter from \"./propertiesEventEmitter\";\nimport globalPropertyEventEmitter from \"./globalPropertyEventEmitter\";\n\n/**\n * A property represent an observable attribute of an object, with optional\n * getters and setters.\n *\n * @param{string} spec.owner - Instance on which the property is installed.\n * @param{string} spec.name - Name of the property, which value of the same\n * name is installed on `my` on the instance.\n */\nobject.extend(function(that, my) {\n\tthat.onPropertyAccess = function(propName, listener) {\n\t\tlet emitter = my.ensurePropertiesEventEmitter();\n\t\temitter.onAccess(propName, listener);\n\t};\n\n\tthat.onPropertyChange = function(propName, listener) {\n\t\tlet emitter = my.ensurePropertiesEventEmitter();\n\t\temitter.onChange(propName, listener);\n\t};\n\n\tmy.property = function(propName, initialValue) {\n\t\tlet value = initialValue;\n\t\tObject.defineProperty(my, propName, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\temitPropertyAccess(propName);\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\tset: function(newValue) {\n\t\t\t\tvalue = newValue;\n\t\t\t\temitPropertyChange(propName, value);\n\t\t\t}\n\t\t});\n\t};\n\n\tmy.ensurePropertiesEventEmitter = function() {\n\t\tif (my.propertiesEventEmitter) {\n\t\t\treturn my.propertiesEventEmitter;\n\t\t}\n\n\t\tmy.propertiesEventEmitter = propertiesEventEmitter({\n\t\t\tinstance: that\n\t\t});\n\n\t\treturn my.propertiesEventEmitter;\n\t};\n\n\tfunction emitPropertyAccess(propName) {\n\t\tlet emitter = my.ensurePropertiesEventEmitter();\n\t\temitter.emitAccess(propName);\n\t\tglobalPropertyEventEmitter.instance().emitAccess(that, propName);\n\t}\n\n\tfunction emitPropertyChange(propName, value) {\n\t\tlet emitter = my.ensurePropertiesEventEmitter();\n\t\temitter.emitChange(propName, value);\n\t\tglobalPropertyEventEmitter.instance().emitChange(that, propName, value);\n\t}\n});\n","/* eslint jasmine/no-global-setup: 0 */\nimport object from \"./object\";\n\n/**\n * `testCase` implements an abstract test class, using Jasmine behind the\n * scenes.\n *\n * All subclasses of testCase are singletons (so that one instance is\n * created when the class is loaded).\n */\nlet testCase = object.abstractSubclass(function(that, my) {\n\n\tmy.initialize = function(spec) {\n\t\tmy.super(spec);\n\t\tlet tests = my.registeredTests();\n\t\tsuite(my.name(), function() {\n\t\t\tbeforeEach(my.beforeEach);\n\t\t\tafterEach(my.afterEach);\n\t\t\tbeforeAll(my.beforeAll);\n\t\t\tafterAll(my.afterAll);\n\t\t\ttests.forEach(function(test) {\n\t\t\t\tit(test.name, test.fn);\n\t\t\t});\n\t\t});\n\t};\n\n\tmy.force = function() {\n\t\treturn false;\n\t};\n\n\tmy.beforeEach = function() {};\n\tmy.beforeAll = function() {};\n\tmy.afterEach = function() {};\n\tmy.afterAll = function() {};\n\n\tmy.name = function() {\n\t\treturn my.subclassResponsibility();\n\t};\n\n\tmy.expect = expect;\n\tmy.spyOn = spyOn;\n\n\tmy.registeredTests = function() {\n\t\tlet result = [];\n\t\tlet testRegex = /Test$/;\n\n\t\tObject.keys(my).forEach(function(name) {\n\t\t\tif (typeof my[name] === \"function\" &&\n\t\t\t\ttestRegex.test(name)) {\n\t\t\t\tresult.push({\n\t\t\t\t\tname: my.buildTestName(name),\n\t\t\t\t\tfn: my[name]\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t};\n\n\tmy.buildTestName = function(name) {\n\t\tname = name.slice(0, -4);\n\t\tlet regexp = /([A-Z][^A-Z]*)/g;\n\t\tname = name.replace(regexp, \" $1\");\n\t\tname = name.toLowerCase();\n\t\treturn name;\n\t};\n\n\tfunction suite(name, callback) {\n\t\tif (my.force()) {\n\t\t\tfdescribe(name, function() { // eslint-disable-line jasmine/no-focused-tests\n\t\t\t\tcallback();\n\t\t\t});\n\t\t} else {\n\t\t\tdescribe(name, function() {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t}\n\t}\n});\n\ntestCase.class(function(that) {\n\tthat.isTestCase = function() {\n\t\treturn true;\n\t};\n\n\t// All test classes are singletons.\n\t// TODO: Refactor with a super call when we\"ll have super on class-side.\n\tthat.subclass = (function(superSubclass) {\n\t\treturn function(builder, options) {\n\t\t\tlet klass = superSubclass.apply(that, [builder]);\n\n\t\t\tif (options && options.isAbstract) {\n\t\t\t\treturn klass;\n\t\t\t}\n\n\t\t\tlet instance = klass();\n\t\t\tklass.isSingleton = true;\n\t\t\tklass.instance = function() {\n\t\t\t\treturn instance;\n\t\t\t};\n\n\t\t\treturn klass;\n\t\t};\n\t})(that.subclass);\n\n\t// We need this to ensure we don't have abstract & singleton classes\n\tthat.abstractSubclass = (function(superAbstractSubclass) {\n\t\treturn function(builder) {\n\t\t\tlet klass = this.subclass(builder, { isAbstract: true });\n\t\t\tklass.isAbstract = true;\n\t\t\treturn klass;\n\t\t};\n\n\t})(that.abstractSubclass);\n});\n\nexport default testCase;\n"]}